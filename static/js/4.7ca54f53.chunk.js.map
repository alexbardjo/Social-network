{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","s","dialog","active","avatarPerson","src","img","name","Message","message","maxLengthCreator50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","formData","sendMessage","newMessageBody","compose","dispatch","addMessageActionCreator"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,aAAe,gC,+ICGnLC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAEVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAJV,GAEXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,+FCC9DM,EAZI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,yBAAKH,UAAWC,IAAEG,aAAcC,IAAKZ,EAAMa,MAC3C,kBAAC,IAAD,CAASZ,GAAII,GAAOL,EAAMc,QCFvBC,EALC,SAACf,GACb,OAAO,yBAAKO,UAAWC,IAAEQ,SAAUhB,EAAMgB,U,iCCGvCC,EAAqBC,YAAiB,IAoBtCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACpB,GAEpB,OACI,8BACI,0BAAMsB,SAAUtB,EAAMuB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAY,qBACZX,KAAK,iBACLY,UAAWC,IAClBC,SAAU,CAACC,IAAUZ,MAEzB,6BACI,qDA+BLa,EAvBC,SAAC9B,GACb,IAAIP,EAAQO,EAAM+B,YACdC,EAAkBvC,EAAMwC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMR,GAAI6B,EAAE7B,GAAIO,IAAKsB,EAAEtB,IAAKuB,IAAKD,EAAE7B,QAChG+B,EAAmB5C,EAAM6C,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEjC,QAMnF,OACI,yBAAKC,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAEgC,cACbR,GAGL,yBAAKzB,UAAWC,IAAE8B,UACbD,GAEL,kBAAClB,EAAD,CAAqBG,SAZP,SAACmB,GACnBzC,EAAM0C,YAAYD,EAASE,qB,wBCfpBC,sBACXzC,aAfkB,SAACV,GACnB,MAAO,CACHsC,YAAatC,EAAMsC,gBAGF,SAACc,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAwBH,SAQzC/C,IAFWgD,CAGZd","file":"static/js/4.7ca54f53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__27Hbj\",\"dialogsItems\":\"Dialogs_dialogsItems__1CahS\",\"active\":\"Dialogs_active__3m625\",\"messages\":\"Dialogs_messages__2v4Vl\",\"avatarPerson\":\"Dialogs_avatarPerson__3TzFv\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img className={s.avatarPerson} src={props.img}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n};\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLengthCreator50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field placeholder='Enter your message'\r\n                           name='newMessageBody'\r\n                           component={Textarea}\r\n                    validate={[required, maxLengthCreator50]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Add Message</button>\r\n                </div>\r\n            </form>\r\n        </form>\r\n    )\r\n};\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} img={d.img} key={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n\r\n    const addNewMessage = (formData) => {\r\n        props.sendMessage(formData.newMessageBody)\r\n    };\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../Redux/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}